---
- name: Copy SSL cert
  copy:
    src: "{{ item.value.ssl.cert }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.cert | basename }}"
    mode: 0640
  with_dict: "{{ wordpress_sites }}"
  when: ssl_enabled and item.value.ssl.cert is defined

- name: Copy SSL key
  copy:
    src: "{{ item.value.ssl.key }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.key | basename }}"
    mode: 0600
  with_dict: "{{ wordpress_sites }}"
  when: ssl_enabled and item.value.ssl.key is defined

- name: Find Let's Encrypt bundled certs with current ID in filename
  stat:
    path: "{{ letsencrypt_certs_dir }}/{{ item.key }}-{{ letsencrypt_cert_ids[item.key] }}-bundled.cert"
  with_dict: "{{ wordpress_sites }}"
  register: bundled_certs_with_id
  when:
    - site_uses_letsencrypt
    - generate_certs is not defined or not generate_certs | changed
  tags: nginx-includes

- name: Rsync Let's Encrypt bundled certs into filename without ID
  command: rsync -ac --info=NAME {{ item.stat.path }} {{ letsencrypt_certs_dir }}/{{ item.item.key }}-bundled.cert
  with_items: "{{ bundled_certs_with_id.results }}"
  register: sync_bundled_cert
  changed_when: sync_bundled_cert.stdout == item.stat.path | basename
  when: not item | skipped and item.stat.exists
  tags: nginx-includes

- include: "{{ playbook_dir }}/roles/common/tasks/disable_challenge_sites.yml"

- name: Create Nginx conf for challenges location
  template:
    src: "{{ playbook_dir }}/roles/letsencrypt/templates/acme-challenge-location.conf.j2"
    dest: "{{ nginx_path }}/acme-challenge-location.conf"
  notify: reload nginx

- name: Create WordPress configuration for Nginx
  template:
    src: "{{ item.value.nginx_wordpress_site_conf | default(nginx_wordpress_site_conf) }}"
    dest: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  notify: reload nginx
  tags: nginx-includes

- name: Enable WordPress site
  file:
    src: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
    dest: "{{ nginx_path }}/sites-enabled/{{ item.key }}.conf"
    owner: root
    group: root
    state: link
  with_dict: "{{ wordpress_sites }}"
  notify: reload nginx
